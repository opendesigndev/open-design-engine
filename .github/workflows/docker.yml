name: Docker build
on:
  push

env:
  GITLAB_REGISTRY: registry.avcd.cz
  GITLAB_PROJECT: opendesign/open-design-engine
  GITLAB_USERNAME: registry
  GITLAB_BASE_CACHE_IMAGE: registry.avcd.cz/opendesign/open-design-engine/build-base

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Personal token with read-only access to liboctopus and open-design-text-renderer
          # https://github.com/organizations/opendesigndev/settings/personal-access-tokens/39049
          token: ${{ secrets.ODE_REPOS_TOKEN }}
          submodules: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS credentials for ECR access
        uses: "aws-actions/configure-aws-credentials@v1"
        with:
          # GithubCIUser
          aws-access-key-id: "${{ vars.AWS_ACCESS_KEY_ID }}"
          aws-region: us-east-1
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Login to Gitlab Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITLAB_REGISTRY }}
          username: ${{ env.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}
      - name: Configure environment variables
        run: |
          # Looks like metadata-action enable condition only allows boolean variables
          if [ $GITHUB_REF_TYPE == branch ];
          then
            echo "ON_BRANCH=true" >> $GITHUB_ENV;
            echo "ON_TAG=false" >> $GITHUB_ENV;
            { echo -n "ODE_BUILD_COMMIT_TAG="; git describe --tags --always; } >> $GITHUB_ENV
          else
            echo "ON_BRANCH=false" >> $GITHUB_ENV;
            echo "ON_TAG=true" >> $GITHUB_ENV;
            echo "ODE_BUILD_COMMIT_TAG=${{ github.ref_name }}" >> $GITHUB_ENV;
          fi
          { echo -n "VCPKG_COMMIT="; jq -r '."builtin-baseline"' vcpkg.json; } >> $GITHUB_ENV
          { echo -n "GITLAB_BASE_CACHE=${{ env.GITLAB_BASE_CACHE_IMAGE }}:cache-"; {
            jq -r '."builtin-baseline"' vcpkg.json;
            # Portion of Dockerfile before "FROM ode-debian-build-base "
            sed '/FROM ode-debian-build-base /q' dockerfiles/debian-build/Dockerfile;
          } | sha256sum | head -c 16; echo; } >> $GITHUB_ENV
      - name: Extract base image docker meta
        id: meta-base
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITLAB_REGISTRY }}/${{ env.GITLAB_PROJECT }}/build-base
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-,enable=${{ env.ON_BRANCH }}
            type=sha,prefix={{tag}}-,enable=${{ env.ON_TAG }}
      - name: Build and cache base image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          file: ./dockerfiles/debian-build/Dockerfile
          build-args: |
            VCPKG_COMMIT_SOURCE=arg
            VCPKG_COMMIT=${{ env.VCPKG_COMMIT }}
          target: ode-debian-build-base
          cache-from: type=registry,ref=${{ env.GITLAB_BASE_CACHE }}
          cache-to: type=registry,ref=${{ env.GITLAB_BASE_CACHE }},mode=max
      - name: Adding base image tag to summary
        run: |
          echo "Base docker image: ${{ fromJSON(steps.meta-base.outputs.json).tags[1] }}" >> $GITHUB_STEP_SUMMARY
      - name: Extract job Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITLAB_REGISTRY }}/${{ env.GITLAB_PROJECT }}/ode-portable
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-,enable=${{ env.ON_BRANCH }}
            type=sha,prefix={{tag}}-,enable=${{ env.ON_TAG }}
      - name: Build and push main image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./dockerfiles/debian-build/Dockerfile
          build-args: |
            VCPKG_COMMIT_SOURCE=arg
            VCPKG_COMMIT=${{ env.VCPKG_COMMIT }}
            ODE_BUILD_COMMIT_TAG="${{ env.ODE_BUILD_COMMIT_TAG }}"
          cache-from: type=registry,ref=${{ env.GITLAB_BASE_CACHE }}
      - name: Adding output tags to summary
        run: |
          echo "Main docker image: ${{ fromJSON(steps.meta.outputs.json).tags[1] }}" >> $GITHUB_STEP_SUMMARY
      - name: Copy artifacts
        run: |
          mkdir build-artifacts
          docker create --name ode-build-inst ${{ fromJSON(steps.meta.outputs.json).tags[1] }} ode-renderer
          docker cp ode-build-inst:/opt/ode-renderer build-artifacts/
          docker rm -v ode-build-inst
      - name: Build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build-artifacts/ode-renderer
