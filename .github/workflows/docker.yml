name: docker
on:
  push

env:
  GITLAB_REGISTRY: registry.avcd.cz
  GITLAB_PROJECT: opendesign/open-design-engine
  GITLAB_USERNAME: registry

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Personal token with read-only access to liboctopus and open-design-text-renderer
          # https://github.com/organizations/opendesigndev/settings/personal-access-tokens/39049
          token: ${{ secrets.ODE_REPOS_TOKEN }}
          submodules: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Gitlab Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITLAB_REGISTRY }}
          username: ${{ env.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}
      - name: Extract job Docker meta
        id: meta-base
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITLAB_REGISTRY }}/${{ env.GITLAB_PROJECT }}/build-base
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
      - name: Build and cache base image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          file: ./dockerfiles/debian-build/Dockerfile
          target: ode-debian-build-base
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Extract job Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITLAB_REGISTRY }}/${{ env.GITLAB_PROJECT }}/portable
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
      - name: Build and push main image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./dockerfiles/debian-build/Dockerfile
          build-args: |
            ODE_BUILD_COMMIT="${{ github.sha }}"
          cache-from: type=gha
      - name: Adding output tags to summary
        run: echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
