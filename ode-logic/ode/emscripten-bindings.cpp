
// FILE GENERATED BY generate-api-bindings.py

#ifdef __EMSCRIPTEN__

#include <array>
#include <emscripten/bind.h>
#include <ode/utils.h>
#include "logic-api.h"

using namespace emscripten;

const ODE_LayerList::Entry &ode_layerList_getEntry(const ODE_LayerList &x, int i) {
    ODE_ASSERT(i >= 0 && i < x.n);
    return x.entries[i];
}

EMSCRIPTEN_BINDINGS(ode) {

    constant("LAYER_FLAG_VISIBLE", ODE_LAYER_FLAG_VISIBLE);
    constant("LAYER_FLAG_MASK", ODE_LAYER_FLAG_MASK);

    enum_<ODE_LayerType>("LayerType")
        .value("UNSPECIFIED", ODE_LAYER_TYPE_UNSPECIFIED)
        .value("SHAPE", ODE_LAYER_TYPE_SHAPE)
        .value("TEXT", ODE_LAYER_TYPE_TEXT)
        .value("GROUP", ODE_LAYER_TYPE_GROUP)
        .value("MASK_GROUP", ODE_LAYER_TYPE_MASK_GROUP)
        .value("COMPONENT_REFERENCE", ODE_LAYER_TYPE_COMPONENT_REFERENCE)
        .value("COMPONENT_INSTANCE", ODE_LAYER_TYPE_COMPONENT_INSTANCE);

    value_array<std::array<ODE_Scalar, 6> >("Scalar_array_6")
        .element(emscripten::index<0>())
        .element(emscripten::index<1>())
        .element(emscripten::index<2>())
        .element(emscripten::index<3>())
        .element(emscripten::index<4>())
        .element(emscripten::index<5>());

    value_object<ODE_Transformation>("Transformation")
        .field("matrix", &ODE_Transformation::matrix);

    class_<ODE_EngineAttributes>("EngineAttributes").constructor<>();

    value_object<ODE_ComponentMetadata>("ComponentMetadata")
        .field("id", &ODE_ComponentMetadata::id)
        .field("page", &ODE_ComponentMetadata::page)
        .field("position", &ODE_ComponentMetadata::position);

    value_object<ODE_LayerList::Entry>("LayerList_Entry")
        .field("parentId", &ODE_LayerList::Entry::parentId)
        .field("id", &ODE_LayerList::Entry::id)
        .field("type", &ODE_LayerList::Entry::type)
        .field("flags", &ODE_LayerList::Entry::flags)
        .field("name", &ODE_LayerList::Entry::name);

    class_<ODE_LayerList>("LayerList").constructor<>()
        .property("n", &ODE_LayerList::n)
        .function("getEntry", &ode_layerList_getEntry);

    class_<ODE_LayerMetrics>("LayerMetrics").constructor<>()
        .property("transformation", &ODE_LayerMetrics::transformation)
        .property("logicalBounds", &ODE_LayerMetrics::logicalBounds)
        .property("graphicalBounds", &ODE_LayerMetrics::graphicalBounds)
        .property("transformedGraphicalBounds", &ODE_LayerMetrics::transformedGraphicalBounds);

    enum_<ODE_ParseError::Type>("ParseError_Type")
        .value("OK", ODE_ParseError::OK)
        .value("JSON_SYNTAX_ERROR", ODE_ParseError::JSON_SYNTAX_ERROR)
        .value("UNEXPECTED_END_OF_FILE", ODE_ParseError::UNEXPECTED_END_OF_FILE)
        .value("TYPE_MISMATCH", ODE_ParseError::TYPE_MISMATCH)
        .value("ARRAY_SIZE_MISMATCH", ODE_ParseError::ARRAY_SIZE_MISMATCH)
        .value("UNKNOWN_KEY", ODE_ParseError::UNKNOWN_KEY)
        .value("UNKNOWN_ENUM_VALUE", ODE_ParseError::UNKNOWN_ENUM_VALUE)
        .value("VALUE_OUT_OF_RANGE", ODE_ParseError::VALUE_OUT_OF_RANGE)
        .value("STRING_EXPECTED", ODE_ParseError::STRING_EXPECTED)
        .value("UTF16_ENCODING_ERROR", ODE_ParseError::UTF16_ENCODING_ERROR);

    class_<ODE_ParseError>("ParseError").constructor<>()
        .property("type", &ODE_ParseError::type)
        .property("position", &ODE_ParseError::position);

    class_<ODE_EngineHandle>("EngineHandle").constructor<>();
    class_<ODE_DesignHandle>("DesignHandle").constructor<>();
    class_<ODE_ComponentHandle>("ComponentHandle").constructor<>();

    function("destroyLayerList", &ode_destroyLayerList, allow_raw_pointers());
    function("destroyMissingFontList", &ode_destroyMissingFontList, allow_raw_pointers());
    function("initializeEngineAttributes", &ode_initializeEngineAttributes, allow_raw_pointers());
    function("createEngine", &ode_createEngine, allow_raw_pointers());
    function("destroyEngine", &ode_destroyEngine, allow_raw_pointers());
    function("createDesign", &ode_createDesign, allow_raw_pointers());
    function("loadDesignFromManifestString", &ode_loadDesignFromManifestString, allow_raw_pointers());
    function("destroyDesign", &ode_destroyDesign, allow_raw_pointers());
    function("design_loadManifestString", &ode_design_loadManifestString, allow_raw_pointers());
    function("design_addComponentFromOctopusString", &ode_design_addComponentFromOctopusString, allow_raw_pointers());
    function("design_removeComponent", &ode_design_removeComponent, allow_raw_pointers());
    function("design_listMissingFonts", &ode_design_listMissingFonts, allow_raw_pointers());
    function("design_loadFontBytes", &ode_design_loadFontBytes, allow_raw_pointers());
    function("design_getComponent", &ode_design_getComponent, allow_raw_pointers());
    function("component_addLayer", &ode_component_addLayer, allow_raw_pointers());
    function("component_modifyLayer", &ode_component_modifyLayer, allow_raw_pointers());
    function("pr1_component_loadAnimation", &ode_pr1_component_loadAnimation, allow_raw_pointers());
    function("pr1_component_getAnimationValueAtTime", &ode_pr1_component_getAnimationValueAtTime, allow_raw_pointers());
    function("component_listLayers", &ode_component_listLayers, allow_raw_pointers());
    function("component_identifyLayer", &ode_component_identifyLayer, allow_raw_pointers());
    function("component_getLayerMetrics", &ode_component_getLayerMetrics, allow_raw_pointers());
    function("component_listMissingFonts", &ode_component_listMissingFonts, allow_raw_pointers());
    function("component_getOctopus", &ode_component_getOctopus, allow_raw_pointers());

}

#endif // __EMSCRIPTEN__
