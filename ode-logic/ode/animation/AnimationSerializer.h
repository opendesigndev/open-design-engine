
// Generated by json-cpp-gen by Viktor Chlumsky
// https://github.com/Chlumsky/json-cpp-gen

#pragma once

#include <nonstd/serialize_float.hpp>
#include <octopus/general.h>
#include "DocumentAnimation.h"

namespace ode {

class AnimationSerializer {

public:
    struct Error {
        enum Type {
            OK,
            UNREPRESENTABLE_FLOAT_VALUE,
            UNKNOWN_ENUM_VALUE
        } type;
        const void *datapoint;

        inline Error(Type type = Error::OK) : type(type), datapoint() { }
        inline Error(Type type, const void *datapoint) : type(type), datapoint(datapoint) { }
        operator Type() const;
        operator bool() const;
        const char *typeString() const;
    };

    static Error serialize(std::string &jsonString, ode::DocumentAnimation const &input);

protected:
    std::string &json;

    AnimationSerializer(std::string &json);
    void write(char c);
    void write(const char *str);
    void writeEscaped(char c);

    Error serializeStdString(std::string const &value);
    Error serializeOdeLayerAnimationType(ode::LayerAnimation::Type const &value);
    Error serializeDouble(double const &value);
    Error serializeStdVectorDouble(std::vector<double> const &value);
    Error serializeStdArrayDouble6(std::array<double, 6> const &value);
    Error serializeOctopusColor(octopus::Color const &value);
    Error serializeOdeLayerAnimationKeyframe(ode::LayerAnimation::Keyframe const &value);
    Error serializeStdVectorOdeLayerAnimationKeyframe(std::vector<ode::LayerAnimation::Keyframe> const &value);
    Error serializeStdArrayDouble2(std::array<double, 2> const &value);
    Error serializeOdeLayerAnimation(ode::LayerAnimation const &value);
    Error serializeStdVectorOdeLayerAnimation(std::vector<ode::LayerAnimation> const &value);
    Error serializeOdeDocumentAnimation(ode::DocumentAnimation const &value);

};

}
